// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var correctProof = require('../../zokrates/code/square/proof.json');

var TokenVerifier = artifacts.require('Verifier');

contract('TestSquareVerifier', accounts => {

  const account_one = accounts[0];

  describe('Test square verifier', function () {
      beforeEach(async function () {
          this.contract = await TokenVerifier.new({from: account_one});
      })

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
    it('Test verification with correct proof', async function() {
      let verificationResult = await this.contract.verifyTx.call(
                                                            correctProof.proof.a,
                                                            correctProof.proof.b,
                                                            correctProof.proof.c,
                                                            correctProof.inputs);

      assert.equal(verificationResult, true, "The verification was not successful.");
    })


// Test verification with incorrect proof

    it('Test verification with incorrect proof', async function() {
      let verificationResult = await this.contract.verifyTx.call(
                                                            correctProof.proof.a,
                                                            correctProof.proof.b,
                                                            correctProof.proof.c,
                                                            [9,0]);

      assert.equal(verificationResult, false, "The verification was successful. It shouldn not!");
    })

  });


})
